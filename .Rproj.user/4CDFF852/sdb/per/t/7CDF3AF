{
    "contents" : "## Matrix inversion is usually a costly computation and there may be some benefit to caching \n## the inverse of a matrix rather than compute it repeatedly (there are also alternatives to \n## matrix inversion that we will not discuss here). Your assignment is to write a pair of \n## functions that cache the inverse of a matrix.\n\n## The following function is designed to create a matrix object to cache its inverse\n\nmakeCacheMatrix <- function(x = matrix()) {\n  ## creation of a square invertible matrix\n  ## returning a list containing a function to\n  ## 1. Set the value of the matrix\n  ## 2. get the value of the matrix\n  ## 3. set the value of the inverse\n  ## 4. get the value of the inverse\n  \n  invrs = NULL\n  set = function(y) {\n    x <<- y\n    invrs <<- NULL\n  }\n  get = function() x\n  setinvrs = function(solve) invrs <<- solve\n  getinvrs = function() invrs\n  list(set=set, get=get, setinvrs=setinvrs, getinvrs=getinvrs)\n}\n\n## The following function calcuates the inverse of the matrix generated by makeCacheatrix.\n## Cavet: if the inverse is already calculated and there is no change to the matrix\n## cacheSolve wil just retrieve the inverse directly from the cache\n\ncacheSolve <- function(x, ...) {\n  ## Return a matrix that is the inverse of 'x'\n  \n  invrs = x$getinvrs()\n  \n  ## the following is if the inverse has already been calculated\n  if (!is.null(invrs)){\n    ## gets the data from the cache\n    message(\"getting cached data\")\n    return(invrs)\n  }\n  \n  ## else, we need to calculate the inverse\n  matrixData = x$get()\n  invrs = solve(matrixData, ...)\n  x$setinvrs(inv)\n  \n  invrs\n}\n",
    "created" : 1440352876143.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1562280722",
    "id" : "7CDF3AF",
    "lastKnownWriteTime" : 1440354314,
    "path" : "C:/Users/Amrit Siew/Desktop/ProgrammingAssignment2/cachematrix.R",
    "project_path" : "cachematrix.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}